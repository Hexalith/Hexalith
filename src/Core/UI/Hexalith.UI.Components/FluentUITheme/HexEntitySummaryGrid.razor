@using Hexalith.Extensions.Helpers
@using Microsoft.AspNetCore.Components
@using Microsoft.FluentUI.AspNetCore.Components
@inherits FluentDataGrid<TGridItem>
@typeparam TGridItem where TGridItem : IIdDescription
@using Labels = Hexalith.UI.Components.Resources.FluentUITheme
@inject NavigationManager NavigationManager
@inject IToastService ToastService
@if (Items is not null)
{
    <FluentDataGrid GenerateHeader="GenerateHeaderOption.Sticky"
                    Items="Items"
                    ItemKey="@((i) => i.Id)"
                    TGridItem="TGridItem"
                    ResizableColumns="true"
                    ShowHover="true"
                    OnRowDoubleClick="DoubleClick">
        <PropertyColumn Title="@Labels.Id" Property="@(p => p.Id)" Sortable="true" />
        <PropertyColumn Title="@Labels.Description" Property="@(p => p.Description)" Sortable="true" />
        @ChildContent
        @if (ShowDisabledColumn)
        {
            <TemplateColumn Title="@Labels.Disabled">
                <FluentCheckbox Value="@(context.Disabled)" ValueChanged="@(c => DisabledChanged(context.Id))" />
            </TemplateColumn>
        }

    </FluentDataGrid>
}
@code {

    /// <summary>
    /// Gets or sets the callback when a row is double clicked.
    /// </summary>
    [Parameter]
    public string? EntityDetailsPath { get; set; }

    /// <summary>
    /// Gets or sets the callback when the disabled state changes.
    /// </summary>
    [Parameter]
    public EventCallback<string> OnDisabledChanged { get; set; }

    /// <summary>
    /// Gets or sets a value indicating whether the disabled column should be displayed.
    /// </summary>
    [Parameter]
    public bool ShowDisabledColumn { get; set; }


    private async Task DisabledChanged(string id)
    {
        try
        {
            await OnDisabledChanged.InvokeAsync(id);
        }
        catch (Exception ex)
        {
            ToastService.ShowError(string.Format(Labels.DisableChangeError, id, ex.FullMessage()));
        }
    }

    private void DoubleClick(FluentDataGridRow<TGridItem> row)
    {
        if (!string.IsNullOrWhiteSpace(EntityDetailsPath) && !string.IsNullOrWhiteSpace(row.Item?.Id))
        {
            NavigationManager.NavigateTo($"{EntityDetailsPath}/{row.Item.Id}");
        }
    }
}
