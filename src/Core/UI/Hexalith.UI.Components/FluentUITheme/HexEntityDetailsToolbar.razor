@using Hexalith.Application
@using Labels = Hexalith.UI.Components.Resources.FluentUITheme
@inject NavigationManager NavigationManager
<FluentToolbar Style="width:100%;">
    @if (IndexPath is not null)
    {
    <FluentButton Title="@(IndexButtonTitle?? Labels.AddButtonTitle)"
                  Appearance="Appearance.Stealth"
                  IconStart="@(new Icons.Filled.Size20.List())"
                  OnClick="OnIndex"></FluentButton>
    }
    @ChildContent
    <FluentButton Title="@(SaveButtonTitle?? Labels.SaveButtonTitle)"
                  Appearance="Appearance.Stealth"
                  IconStart="@(new Icons.Filled.Size20.Save())"
                  OnClick="OnSave"></FluentButton>
    <FluentButton Title="@(RefreshButtonTitle ?? Labels.RefreshButtonTitle)"
                  Appearance="Appearance.Stealth"
                  IconStart="@(new Icons.Filled.Size20.ArrowSync())"
                  OnClick="OnRefresh"></FluentButton>
    @if (ShowAdministratorTools)
    {

    }
</FluentToolbar>

@code {
    [Parameter]
    public bool ShowAdministratorTools { get; set; }

    [Parameter]
    public string? IndexButtonTitle { get; set; }

    [Parameter]
    public string? SaveButtonTitle { get; set; }

    [Parameter]
    public string? RefreshButtonTitle { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public string? IndexPath { get; set; }

    [Parameter]
    public EventCallback OnRefresh { get; set; }

    [Parameter]
    public EventCallback OnSave { get; set; }


    void OnIndex()
    {
        if (IndexPath is not null)
        {
            NavigationManager.NavigateTo(IndexPath, true);
        }
    }
} 