<FluentAutocomplete TOption="IIdDescription"
					OnOptionsSearch="OnOptionsSearch"
					SelectedOptionsChanged="OnSelectedOptionsChanged"
					SelectedOptions="_selectedOptions"
					MaximumSelectedOptions="1"
					MaximumOptionsSearch="MaximumOptionsSearch"
					Multiple="true"
					Label="@Label"
					Placeholder="@Placeholder"
					Width="@(Width ?? "100%")"
					OptionText="@(item => item.Description)" />

@code
{
	IEnumerable<IIdDescription>? _selectedOptions;

	[Parameter]
	public string? Id { get; set; }

	[Parameter]
	public EventCallback<string?> IdChanged { get; set; }

	[Parameter]
	public string? Width { get; set; }

	[Parameter]
	public string? Label { get; set; }

	[Parameter]
	public string? Placeholder { get; set; }

	[Parameter]
	public int MaximumOptionsSearch { get; set; } = 100;

	[Parameter]
	public EventCallback<OptionsSearchEventArgs<IIdDescription>> OnOptionsSearch { get; set; }



	private async Task OnSelectedOptionsChanged(IEnumerable<IIdDescription>? options)
	{
		if (options is null || !options.Any())
		{
			_selectedOptions = null;
			Id = null;
			return;
		}
		_selectedOptions = options.Take(1);
		Id = _selectedOptions.First().Id;
		await IdChanged.InvokeAsync(Id);
	}
}